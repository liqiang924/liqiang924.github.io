mkdir ~/wes_cancer
cd ~/wes_cancer
mkdir biosoft project data
cd project
mkdir -p 0.sra 1.raw_fq 2.clean_fq 3.qc/{raw_qc,clean_qc} 4.align/{qualimap,flagstat,stats} 5.gatk/gvcf 6.mutect 7.annotation/{vep,annovar,funcotator,snpeff} 8.cnv/{gatk,cnvkit,gistic,facet} 9.pyclone 10.signature
cd ~/wes_cancer/biosoft
wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh
source ~/.bashrc
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/
conda config --set show_channel_urls yes
conda create -n wes python=3
conda activate wes
conda install -y sra-tools fastqc trim-galore multiqc bwa samtools gnuplot qualimap subread vcftools bedtools cnvkit 
conda install -y -c hcc aspera-cli=3.7.7
cd ~/wes_cancer/biosoft
wget -c https://github.com/broadinstitute/gatk/releases/download/4.1.4.1/gatk-4.1.4.1.zip
unzip gatk-4.1.4.1.zip
cd ~/wes_cancer/data/
lftp gsapubftp-anonymous@ftp.broadinstitute.org:/bundle/
cd hg38
get 1000G_phase1.snps.high_confidence.hg38.vcf.gz
get 1000G_phase1.snps.high_confidence.hg38.vcf.gz.tbi
get dbsnp_146.hg38.vcf.gz
get dbsnp_146.hg38.vcf.gz.tbi
get Homo_sapiens_assembly38.dict
get Homo_sapiens_assembly38.fasta.fai
get Homo_sapiens_assembly38.fasta.gz
get Mills_and_1000G_gold_standard.indels.hg38.vcf.gz
get  Mills_and_1000G_gold_standard.indels.hg38.vcf.gz.tbi
lftp gsapubftp-anonymous@ftp.broadinstitute.org:/bundle/
cd funcotator
get 1000G_phase1.snps.high_confidence.hg38.vcf.gz.tbi
wget ftp://ftp.ncbi.nlm.nih.gov/pub/CCDS/current_human/CCDS.current.txt
cat CCDS.current.txt | grep  "Public" | perl -alne '{/\[(.*?)\]/;next unless $1;$gene=$F[2];$exons=$1;$exons=~s/\s//g;$exons=~s/-/\t/g;print "$F[0]\t$_\t$gene" foreach split/,/,$exons;}'|sort -u |bedtools sort -i |awk '{if($3>$2) print "chr"$0"\t0\t+"}'  > hg38.exon.bed
cd ~/wes_cancer/data
gunzip Homo_sapiens_assembly38.fasta.gz
time bwa index -a bwtsw -p gatk_hg38 ~/wes_cancer/data/Homo_sapiens_assembly38.fasta

##质控去接头
cd ~/wes_cancer/project
cat config | while read id
do
	fastqc --outdir ./3.qc/raw_qc/ --threads 16 ./1.raw_fq/${id}*.fastq.gz >> ./3.qc/raw_qc/${id}_fastqc.log 2>&1 
done 

multiqc  ./3.qc/raw_qc/*zip  -o ./3.qc/raw_qc/multiqc

## trim_galore.sh
cat config | while read id
do
	fq1=./1.raw_fq/${id}_1.fastq.gz
	fq2=./1.raw_fq/${id}_2.fastq.gz
	trim_galore  --paired -q 28 --phred33 --length 30 --stringency 3 --gzip --cores 8 -o ./2.clean_fq  $fq1  $fq2 >> ./2.clean_fq/${id}_trim.log 2>&1
done

nohup bash trim_galore.sh &

cat config | while read id
do
	fastqc --outdir ./3.qc/clean_qc/ --threads 16 ./2.clean_fq/${id}*.fq.gz >> ./3.qc/clean_qc/${id}_fastqc.log 2>&1 
done 

multiqc  ./3.qc/clean_qc/*zip  -o ./3.qc/clean_qc/multiqc

##比对
bash bwa.sh

##标记或去重复序列
bash MarkDuplicates.sh

##矫正碱基质量
bash BQSR.sh

##生殖细胞突变
GATK=~/wes_cancer/biosoft/gatk-4.1.4.1/gatk
snp=~/wes_cancer/data/dbsnp_146.hg38.vcf.gz
indel=~/wes_cancer/data/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz
ref=~/wes_cancer/data/Homo_sapiens_assembly38.fasta
bed=~/wes_cancer/data/hg38.exon.bed

cat config  | while read id
do
	echo "start HC for ${id}" `date`
	$GATK --java-options "-Xmx20G -Djava.io.tmpdir=./" HaplotypeCaller -ERC GVCF \
	-R ${ref} \
	-I ./5.gatk/${id}_bqsr.bam \
	--dbsnp ${snp} \
	-L ${bed} \
	-O ./5.gatk/${id}_raw.vcf \
	1>./5.gatk/${id}_log.HC 2>&1
	echo "end HC for ${id}" `date`

done

cd ./5.gatk/gvcf
for chr in chr{1..22} chrX chrY chrM
do

time $GATK --java-options "-Xmx20G -Djava.io.tmpdir=./" GenomicsDBImport \
-R ${ref} \
$(ls ./*raw.vcf | awk '{print "-V "$0" "}') \
-L ${chr} \
--genomicsdb-workspace-path gvcfs_${chr}.db

time $GATK --java-options "-Xmx20G -Djava.io.tmpdir=./" GenotypeGVCFs \
-R ${ref} \
-V gendb://gvcfs_${chr}.db \
-O gvcfs_${chr}.vcf

done

$GATK --java-options "-Xmx20G -Djava.io.tmpdir=./" GatherVcfs \
$(for i in {1..22} X Y M;do echo "-I gvcfs_chr${i}.vcf" ;done) \
-O merge.vcf
##体细胞突变
bash pon.sh
cd 5.gatk/
bash GenomicsDB.sh
../../biosoft/gatk-4.1.4.1/gatk  CreateSomaticPanelOfNormals -R ~/wes_cancer/data/Homo_sapiens_assembly38.fasta --germline-resource ~/wes_cancer/data/af-only-gnomad.hg38.vcf.gz -V gendb://pon_db -O pon.vcf.gz 1> CreateSomaticPanelOfNormals.log 2>&1
cd ../

## cnvkit.sh
GENOME=~/wes_cancer/data/Homo_sapiens_assembly38.fasta
bed=~/wes_cancer/data/hg38.exon.bed

cnvkit.py batch ./5.gatk/*[ABC]*bqsr.bam   ./5.gatk/*techrep_2_bqsr.bam  \
--normal  ./5.gatk/*germline_bqsr.bam \
--targets  ${bed} \
--fasta $GENOME  \
--drop-low-coverage --scatter --diagram --method amplicon \
--output-reference my_reference.cnn --output-dir ./8.cnv/cnvkit

cd ./8.cnv/cnvkit

cnvkit.py export seg *bqsr.cns -o gistic.segments
sed 's/_bqsr//' gistic.segments

awk '{print FILENAME"\t"$0}' *bqsr.cns  | grep -v chromosome |sed 's/_bqsr.cns//g' |awk '{print $1"\t"$2"\t"$3"\t"$4"\t"$8"\t"$6}' >final.seg

## 添加Barcode
cat config | while read id
do 
	grep -v '^#' ./7.annotation/funcotator/${id}_funcotator.tmp.maf| grep -v '^Hugo_Symbol'| awk -v T=${id} -v N=${id:0:5}_germline 'BEGIN{FS="\t";OFS="\t"}{$16=T;$17=N;print $0}' >./7.annotation/funcotator/${id}_funcotator.maf 
done
## 取出一个列名
grep 'Hugo_Symbol' ./7.annotation/funcotator/case1_biorep_A_techrep_funcotator.tmp.maf >./7.annotation/funcotator/header
## 删除掉旧文件
rm ./7.annotation/funcotator/*tmp.maf
## 合并所有的样本的maf
cat ./7.annotation/funcotator/header ./7.annotation/funcotator/*maf >./7.annotation/funcotator/funcotator_merge.maf
$less ./7.annotation/funcotator/case1_biorep_A_techrep_funcotator.maf | cut -f 9 | sort | uniq -c
      1 3'UTR
      4 Frame_Shift_Del
      1 In_Frame_Del
     12 Intron
    142 Missense_Mutation
     14 Nonsense_Mutation
     60 Silent
      1 Splice_Site
      1 START_CODON_SNP


$ less ./7.annotation/funcotator/case1_biorep_A_techrep_funcotator.maf| cut -f 10 | sort | uniq -c
      5 DEL
      1 DNP
    230 SNP




GENOME=~/wes_cancer/data/Homo_sapiens_assembly38.fasta
dict=~/wes_cancer/data/Homo_sapiens_assembly38.dict
INDEX=~/wes_cancer/data/bwa_index/gatk_hg38
GATK=~/wes_cancer/biosoft/gatk-4.1.4.1/gatk
DBSNP=~/wes_cancer/data/dbsnp_146.hg38.vcf.gz
kgSNP=~/wes_cancer/data/1000G_phase1.snps.high_confidence.hg38.vcf.gz
kgINDEL=~/wes_cancer/data/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz
interval=~/wes_cancer/data/targets.preprocessed.interval.list

cd ~/wes_cancer/project/8.cnv/gatk
###################################
#### 把bam文件转为外显子reads数 ######
###################################


cat ~/wes_cancer/project/config3 | while read id
do
	i=~/wes_cancer/project/5.gatk/${id}_bqsr.bam
	echo ${i}
	## step1 : CollectReadCounts
	time $GATK  --java-options "-Xmx20G -Djava.io.tmpdir=./" 	CollectReadCounts \
	-I ${i} \
	-L ${interval} \
	-R ${GENOME} \
	--format HDF5  \
	--interval-merging-rule OVERLAPPING_ONLY \
	--output ${id}.clean_counts.hdf5
	## step2 : CollectAllelicCounts
	time $GATK  --java-options "-Xmx20G -Djava.io.tmpdir=./"  CollectAllelicCounts \
	-I ${i} \
	-L ${interval} \
	-R ${GENOME} \
	-O ${id}.allelicCounts.tsv
done
### 注意这个CollectAllelicCounts步骤非常耗时，而且占空间

mkdir allelicCounts
mv *.allelicCounts.tsv ./allelicCounts
mkdir counts
mv *.clean_counts.hdf5  ./counts
##################################################
# 接着合并所有的normal样本的数据创建 cnvponM.pon.hdf5 #
##################################################

$GATK  --java-options "-Xmx20g" CreateReadCountPanelOfNormals \
--minimum-interval-median-percentile 5.0 \
--output cnvponM.pon.hdf5 \
--input counts/case1_germline.clean_counts.hdf5 \
--input counts/case2_germline.clean_counts.hdf5 \
--input counts/case3_germline.clean_counts.hdf5 \
--input counts/case4_germline.clean_counts.hdf5 \
--input counts/case5_germline.clean_counts.hdf5 \
--input counts/case6_germline.clean_counts.hdf5
 

############################################
############# 最后走真正的CNV流程 #############
############################################

cat config | while read id
do
	i=./counts/${id}.clean_counts.hdf5
	$GATK  --java-options "-Xmx20g" DenoiseReadCounts \
	-I $i \
	--count-panel-of-normals cnvponM.pon.hdf5 \
	--standardized-copy-ratios ${id}.clean.standardizedCR.tsv \
	--denoised-copy-ratios ${id}.clean.denoisedCR.tsv
done

mkdir denoisedCR standardizedCR segments cnv_plots
mv *denoisedCR.tsv ./denoisedCR
mv *standardizedCR.tsv ./standardizedCR

cat config | while read id
do
	i=./denoisedCR/${id}.clean.denoisedCR.tsv
	## ModelSegments的时候有两个策略，是否利用CollectAllelicCounts的结果
	$GATK   --java-options "-Xmx20g" ModelSegments \
	--denoised-copy-ratios $i \
	--output segments \
	--output-prefix ${id}
	## 如果要利用CollectAllelicCounts的结果就需要增加两个参数，这里就不讲解了。

	$GATK   --java-options "-Xmx20g" CallCopyRatioSegments \
	-I segments/${id}.cr.seg \
	-O segments/${id}.clean.called.seg


	## 这里面有两个绘图函数，PlotDenoisedCopyRatios 和 PlotModeledSegments ，可以选择性运行。

	$GATK   --java-options "-Xmx20g" PlotDenoisedCopyRatios \
	--standardized-copy-ratios 	./standardizedCR/${id}.clean.standardizedCR.tsv \
	--denoised-copy-ratios $i \
	--sequence-dictionary ${dict} \
	--output cnv_plots \
	--output-prefix ${id}

	$GATK   --java-options "-Xmx20g" PlotModeledSegments \
	--denoised-copy-ratios $i \
	--segments segments/${id}.modelFinal.seg \
	--sequence-dictionary ${dict} \
	--output cnv_plots \
	--output-prefix ${id}.clean
done















######################signature mutations
rm(list=ls())
options(stringsAsFactors=FALSE)
## 切换镜像
options(BioC_mirror="https://mirrors.ustc.edu.cn/bioc/")
options("repos" = c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
## 安装R包
install.packages('deconstructSigs')
BiocManager::install('BSgenome')
BiocManager::install('BSgenome.Hsapiens.UCSC.hg38')
library(deconstructSigs)
## https://github.com/raerose01/deconstructSigs

## 读入数据
maf=read.table('./7.annotation/vep/VEP_merge.maf',header = T,sep = '\t',quote = "")
maf[1:5,1:5]

## 构建肿瘤突变数据框，需要5列信息: sample.ID,chr,pos,ref,alt 
sample.mut.ref <- data.frame(Sample=maf[,16], 
                            chr = maf[,5],
                            pos = maf[,6],
                            ref = maf[,11],
                            alt = maf[,13])
			    
			    
			    
			    
			    
			    
			    
cd ~/wes_cancer/biosoft
# wget 下载地址
tar -zxvf annovar.latest.tar.gz
cd annovar
nohup ./annotate_variation.pl -downdb -webfrom annovar gnomad_genome --buildver hg38 humandb/ >down.log 2>&1 &
cat config | while  read id
do
echo "start ANNOVAR for ${id} " `date`
~/biosoft/annovar/table_annovar.pl ./6.mutect/${id}_filter.vcf ~/biosoft/annovar/humandb/ \
-buildver hg38 \
-out ./7.annotation/annovar/${id} \
-remove \
-protocol refGene,knownGene,clinvar_20170905 \
-operation g,g,f \
-nastring . \
-vcfinput
echo "end ANNOVAR for ${id} " `date`
done



## mutect.sh
GATK=~/wes_cancer/biosoft/gatk-4.1.4.1/gatk
ref=~/wes_cancer/data/Homo_sapiens_assembly38.fasta
bed=~/wes_cancer/data/hg38.exon.bed

cat config2 | while read id
do
	arr=(${id})
	sample=${arr[1]}
	T=./5.gatk/${arr[1]}_bqsr.bam
	N=./5.gatk/${arr[0]}_bqsr.bam
	echo "start Mutect2 for ${id}" `date`
	$GATK  --java-options "-Xmx20G -Djava.io.tmpdir=./"  Mutect2 -R ${ref} \
	-I ${T} -tumor  $(basename "$T" _bqsr.bam) \
	-I ${N} -normal $(basename "$N" _bqsr.bam) \
	-L ${bed}  \
	-O ./6.mutect/${sample}_mutect2.vcf

	$GATK  FilterMutectCalls \
  -R ${ref} \
	-V ./6.mutect/${sample}_mutect2.vcf \
	-O ./6.mutect/${sample}_somatic.vcf
	echo "end Mutect2 for ${id}" `date`

	cat ./6.mutect/${sample}_somatic.vcf | perl -alne '{if(/^#/){print}else{next unless $F[6] eq "PASS";next if $F[0] =~/_/;print } }' > ./6.mutect/${sample}_filter.vcf
done
